<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="orderlistSQL">
	
	<!-- 마이페이지 주문 리스트 -->
	<select id="mypage_orderlist" parameterType="java.util.Map" resultType="orderlist">
		select * from 
		(select rownum rn, tt.* from
			(select * from TBL_ORDERLIST
				where userId=#{userId} order by orderDate desc) tt)
		where rn between #{startNum} and #{endNum}
	</select>
	
	<!-- 마이페이지 주문리스트 총 수 -->
	<select id="getTotalAS" parameterType="java.util.Map" resultType="Integer">
		select count(*) from TBL_ORDERLIST where userId=#{userId}
	</select>
	
	
	<!-- 주문취소 - 상태 변경 및 crPayment 업데이트 -->
	<update id="orderCancel" parameterType="java.util.Map">
		begin
			<!-- tbl_orderlist -->
			update TBL_ORDERLIST set crPayment=#{crPayment}, 
										orderState=0 
				where orderCode=#{orderCode};
			
			<!-- tbl_order -->
			update TBL_ORDER set orderState=0,
								cancel=1,
								cancelAmount=totalPrice,
								cancelQty=purchaseQty
				where orderCode=#{orderCode};
			
			<!-- 총구매금액 변경 -->
			update tbl_user set totalPayment = #{x_totalPayment} - #{crPayment} where userId = #{userId};
			
			<!-- 현재 포인트 금액 변경 -->
			update tbl_user set userPoint = #{x_userPoint}
			+ (select usePoint from tbl_point where orderCode = #{orderCode})
			- (select savePoint from tbl_point where orderCode = #{orderCode})
			where userId = #{userId};
			
			<!-- 포인트 내역 변경 -->
			delete tbl_point where userId = #{userId} and orderCode = #{orderCode};
		end;
	</update>
	
	<!--  교환접수 - 상태 변경 업데이트 
	<update id="orderChange" parameterType="String">
		begin	
			tbl_orderlist
			update TBL_ORDERLIST set orderState=5 
				where orderCode=#{orderCode};
			tbl_order
			update TBL_ORDER set orderState=5,
							exchange=1,
							exchangeQty=purchaseQty 	
				where orderCode=#{orderCode};
		end;
	</update> -->
	
	<!-- (옵션있는)환불접수 - 상태 변경 업데이트 -->
	<update id="orderRefund" parameterType="map">
		begin
			<!-- tbl_orderlist -->
			<!-- 주문상태변화 -->
			update TBL_ORDERLIST set orderState=4 
									,erState='환불접수'
									,crPayment=#{erTotalCost}
									,refundRegDate=sysdate
				where orderCode=#{orderCode};
			<!-- 사유 추가 -->	
			update TBL_ORDERLIST set erReason=#{erReason}
									,erDetail=#{erDetail}
				where orderCode=#{orderCode};
					
			<!-- tbl_order -->
			<!-- 상태변화,주문의 교환수량 체크 -->
			update TBL_ORDER set refund=1,<!-- 상태 : 환불접수 -->
								refundQty=#{changeRefundQtyStr},
								purchaseQty=purchaseQty-#{changeRefundQtyStr},	
								refundAmount=#{erCostStr} 
			where orderCode=#{orderCode} and productCode=#{productCodeStr} and optionContent like '%'||#{optionContentStr}||'%';
					
			
			<!-- tbl_product -->
			<!-- 재고추가,판매량감소 -->
			update TBL_PRODUCT set stockQTY=stockQty+#{changeRefundQtyStr} ,saleQty=saleQty-#{changeRefundQtyStr}
				where productCode=#{productCodeStr};
				
			<!-- tbl_productOption -->	
			<!-- 옵션상품 각각 재고, 판매량관리 -->
			update TBL_PRODUCTOPTION set substockQTY=substockQTY+#{changeRefundQtyStr} ,subsaleQty=subsaleQty-#{changeRefundQtyStr}
				where productCode=#{productCodeStr} and optionContent like '%'||#{optionContentStr}||'%';
					
		end;
	</update>
	
	<!-- (옵션없는)환불접수 - 상태 변경 업데이트 -->
	<update id="orderRefundNoOption" parameterType="map">
		begin
			<!-- tbl_orderlist -->
			<!-- 주문상태변화 -->
			update TBL_ORDERLIST set orderState=4 
									,erState='환불접수'
									,crPayment=#{erTotalCost}
									,refundRegDate=sysdate
				where orderCode=#{orderCode};
			<!-- 사유 추가 -->	
			update TBL_ORDERLIST set erReason=#{erReason}
									,erDetail=#{erDetail}
				where orderCode=#{orderCode};
					
			<!-- tbl_order -->
			<!-- 상태변화,주문의 교환수량 체크 -->
			update TBL_ORDER set refund=1,<!-- 상태 : 환불접수 -->
								refundQty=#{changeRefundQtyStr},
								purchaseQty=purchaseQty-#{changeRefundQtyStr},	
								refundAmount=#{erCostStr} 
			where orderCode=#{orderCode} and productCode=#{productCodeStr};
			
			<!-- tbl_product -->
			<!-- 재고추가,판매량감소 -->
			update TBL_PRODUCT set stockQTY=stockQty+#{changeRefundQtyStr} ,saleQty=saleQty-#{changeRefundQtyStr}
				where productCode=#{productCodeStr};
				
			<!-- tbl_productOption -->	
			<!-- 옵션상품 각각 재고, 판매량관리 -->
			update TBL_PRODUCTOPTION set substockQTY=substockQTY+#{changeRefundQtyStr} ,subsaleQty=subsaleQty-#{changeRefundQtyStr}
				where productCode=#{productCodeStr};
					
		end;
	</update>
	
	<!-- (옵션있는)교환접수- 상태변화,물량조절 -->
	<update id="orderExchange" parameterType="map">
		begin
			<!-- tbl_orderlist -->
			<!-- 주문상태변화 -->
			update TBL_ORDERLIST set orderState=4, erState='교환접수', exchangeRegDate = sysdate
				where orderCode=#{orderCode};
			<!-- 사유 추가 -->	
			update TBL_ORDERLIST set erReason=#{erReason}, erDetail=#{erDetail}
				where orderCode=#{orderCode};
					
			<!-- tbl_order -->
			<!-- 상태변화,주문의 교환수량 체크 -->
			update TBL_ORDER set exchange=1,<!-- 상태 : 교환접수 -->
								exchangeQty=#{changeRefundQtyStr},
								purchaseQty=purchaseQty-#{changeRefundQtyStr}	
			where orderCode=#{orderCode} and productCode=#{productCodeStr} and optionContent like '%'||#{optionContentStr}||'%';
					
			
			<!-- tbl_product -->
			<!-- 재고추가,판매량감소 -->
			update TBL_PRODUCT set stockQTY=stockQty+#{changeRefundQtyStr} ,saleQty=saleQty-#{changeRefundQtyStr}
				where productCode=#{productCodeStr};
				
			<!-- tbl_productOption -->	
			<!-- 옵션상품 각각 재고, 판매량관리 -->
			update TBL_PRODUCTOPTION set substockQTY=substockQTY+#{changeRefundQtyStr} ,subsaleQty=subsaleQty-#{changeRefundQtyStr}
				where productCode=#{productCodeStr} and optionContent like '%'||#{optionContentStr}||'%';
					
		end;
	</update>
	
	<!-- (옵션없는)교환접수- 상태변화,물량조절 -->
	<update id="orderExchangeNoOption" parameterType="map">
		begin
			<!-- tbl_orderlist -->
			<!-- 주문상태변화 -->
			update TBL_ORDERLIST set orderState=4, erState='교환접수', exchangeRegDate = sysdate
				where orderCode=#{orderCode};
			<!-- 사유 추가 -->	
			update TBL_ORDERLIST set erReason=#{erReason}, erDetail=#{erDetail}
				where orderCode=#{orderCode};
					
			<!-- tbl_order -->
			<!-- 상태변화,주문의 교환수량 체크 -->
			update TBL_ORDER set exchange=1,<!-- 상태 : 교환접수 -->
								exchangeQty=#{changeRefundQtyStr},
								purchaseQty=purchaseQty-#{changeRefundQtyStr}	
			where orderCode=#{orderCode} and productCode=#{productCodeStr} ;
					
			
			<!-- tbl_product -->
			<!-- 재고추가,판매량감소 -->
			update TBL_PRODUCT set stockQTY=stockQty+#{changeRefundQtyStr} ,saleQty=saleQty-#{changeRefundQtyStr}
				where productCode=#{productCodeStr};
				
			<!-- tbl_productOption -->	
			<!-- 옵션상품 각각 재고, 판매량관리 -->
			update TBL_PRODUCTOPTION set substockQTY=substockQTY+#{changeRefundQtyStr} ,subsaleQty=subsaleQty-#{changeRefundQtyStr}
				where productCode=#{productCodeStr};
					
		end;
	</update>
	
	<!-- 수령확인 -->
	<update id="orderReceipt" parameterType="map">
		begin	
			<!-- tbl_orderlist -->
			update TBL_ORDERLIST set orderState=5
				where orderCode=#{orderCode};
				
			<!-- tbl_order -->
			update TBL_ORDER set orderState=5						
				where orderCode=#{orderCode};
				
			<!-- tbl_point -->
			insert into tbl_point (userId
									  ,logdate
									  ,contents
									  ,orderCode
									  ,usePoint
									  ,savePoint
									  ,pointType)
							values (#{userId}
								   ,sysdate
								   ,'포인트 적립'
								   ,#{orderCode}
								   ,0
								   ,#{savePoint}
								   ,0);
		end;
	</update>
</mapper>